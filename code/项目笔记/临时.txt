router.beforeEach((to, from, next) => {
  if (to.name === 'login') {

    next()
  } else {
    if (!localStorage.getItem("token")) {
      next({
        path: '/login'
      })
    } else {
      if(1){

      }else{
        next()
      }
     configRoutes()

      next({
        path:to.fullPath //会死循环
      })
    }
  }
})
////////////////

let fs = require('fs');

let createFolder = function(folder) {
    try {
      fs.accessSync(folder); // 打开文件夹
    } catch (e) {
      fs.mkdirSync(folder); // 创建文件夹
    } 
  };
  let uploadFolder = 'public/images'; // 设定存储文件夹为当前目录下的 /upload 文件夹
  createFolder(uploadFolder);


  let storage = multer.diskStorage({
    destination: function(req, file, cb) {
      cb(null, uploadFolder); // 他会放在当前目录下的 /upload 文件夹下（没有该文件夹，就新建一个）
    },
    filename: function(req, file, cb) { // 在这里设定文件名
      cb(null, Date.now() +'-' + file.originalname); // file.originalname是将文件名设置为上传时的文件名，file中携带的
      // cb(null, Date.now() + '-' + file.originalname) // 加上Date.now()可以避免命名重复
    }
  })

let upload = multer({ storage: storage })



img {
    max-width: 100%;
    height: auto;
}
 
.image_resized {
    max-width: 100%;
}

.image-style-side {
    float: right;
    margin-left: var(--ck-image-style-spacing);
}

.image-style-align-left {
    float: left;
    margin-right: var(--ck-image-style-spacing);
}

.image-style-align-center {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
}

.image-style-align-right {
    float: right;
    margin-left: var(--ck-image-style-spacing);
}

{
  0:非恐怖，
  1：自创
  2：根据事实改编
  3：我有一个朋友
  4：搬运
  5：我听说
  6：恐怖

}